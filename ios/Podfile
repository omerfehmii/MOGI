# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Build süresini hızlandırmak için cache yapılandırması
ENV['COCOAPODS_DISABLE_DETERMINISTIC_UUIDS'] = 'true'

# Performans iyileştirmeleri
install! 'cocoapods',
         :deterministic_uuids => false,
         :disable_input_output_paths => true

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Set deployment target for all pods to iOS 13.0
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Build hızını artırmak için optimizasyonlar
      config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0' # Debug için optimizasyonu düşür
      config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone' # Debug için Swift optimizasyonunu düşür 
      config.build_settings['ENABLE_BITCODE'] = 'NO' # Bitcode desteğini kapat
      config.build_settings['CLANG_ENABLE_MODULE_DEBUGGING'] = 'NO' # Modül hata ayıklamasını kapat
      
      # Debug yapılandırmaları için ek iyileştirmeler
      if config.name == 'Debug'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES' # Sadece aktif arşivi derle
        config.build_settings['ENABLE_TESTABILITY'] = 'NO' # Test edilebilirliği kapat
        config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = 'DEBUG' # Swift derleme koşullarını ayarla
      end
    end
  end
end
